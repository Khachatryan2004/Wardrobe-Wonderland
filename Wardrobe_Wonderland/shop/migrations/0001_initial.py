# Generated by Django 4.2.6 on 2024-06-20 12:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('item_manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessoriesTypeMen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Accessories Type Men',
                'verbose_name_plural': 'Accessories Type Men',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesTypeWomen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Accessories Type Women',
                'verbose_name_plural': 'Accessories Type Women',
            },
        ),
        migrations.CreateModel(
            name='ClothingTypeMen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Clothing Type Men',
                'verbose_name_plural': 'Clothing Type Men',
            },
        ),
        migrations.CreateModel(
            name='ClothingTypeWomen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Clothing Type Women',
                'verbose_name_plural': 'Clothing Type Women',
            },
        ),
        migrations.CreateModel(
            name='DressesTypeWomen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Dresses Type Women',
                'verbose_name_plural': 'Dresses Type Women',
            },
        ),
        migrations.CreateModel(
            name='MenSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Men Sub Category ',
                'verbose_name_plural': 'Men Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='ShoesTypeMen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Shoes Type Men',
                'verbose_name_plural': 'Shoes Type Men',
            },
        ),
        migrations.CreateModel(
            name='ShoesTypeWomen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Shoes Type Women',
                'verbose_name_plural': 'Shoes Type Women',
            },
        ),
        migrations.CreateModel(
            name='WomenSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Women Sub Category ',
                'verbose_name_plural': 'Women Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(default='item_img/cloth_3.jpg', upload_to='item_img/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='item_img/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='item_img/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='item_img/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='item_img/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(null=True)),
                ('size_clothing', models.CharField(blank=True, choices=[('XS', 'XS (US 2 / UK 4 / Europe 32)'), ('S', 'S (US 4 / UK 6 / Europe 34)'), ('M', 'M (US 6 / UK 8 / Europe 36)'), ('L', 'L (US 8 / UK 10 / Europe 38)'), ('XL', 'XL (US 10 / UK 12 / Europe 40)')], max_length=30, null=True)),
                ('size_shoes', models.CharField(blank=True, choices=[('5 3 35', 'US 5 / UK 3 / Europe 35'), ('6 4 36', 'US 6 / UK 4 / Europe 36'), ('7 5 37', 'US 7 / UK 5 / Europe 37'), ('8 6 38', 'US 8 / UK 6 / Europe 38'), ('9 7 39', 'US 9 / UK 7 / Europe 39'), ('10 8 40', 'US 10 / UK 8 / Europe 40'), ('11 9 41', 'US 11 / UK 9 / Europe 41'), ('12 10 42', 'US 12 / UK 10 / Europe 42'), ('13 11 43', 'US 13 / UK 11 / Europe 43'), ('14 12 44', 'US 14 / UK 12 / Europe 44')], max_length=10, null=True)),
                ('size_accessories', models.CharField(blank=True, choices=[('One Size', 'One Size'), ('No Size', 'No Size'), ('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large')], max_length=20, null=True)),
                ('size_dresses', models.CharField(blank=True, choices=[('XS', 'XS (US 2 / UK 4 / Europe 32)'), ('S', 'S (US 4 / UK 6 / Europe 34)'), ('M', 'M (US 6 / UK 8 / Europe 36)'), ('L', 'L (US 8 / UK 10 / Europe 38)'), ('XL', 'XL (US 10 / UK 12 / Europe 40)')], max_length=40, null=True)),
                ('brand', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='item_manager.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='item_manager.category')),
                ('color', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='item_manager.color')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='item_manager.size')),
                ('subcategory', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='item_manager.subcategory')),
                ('type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='types', to='item_manager.type')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_account_id', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update Time')),
                ('groups', models.ManyToManyField(blank=True, related_name='user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ItemProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('shop.item',),
        ),
    ]
